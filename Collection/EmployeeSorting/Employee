package com.collection_ArrayList;
import java.util.ArrayList;
import java.util.Collections;
class Employee extends Person implements Comparable<Employee> 
{
    private int employeeId;
    private double salary;
    public Employee()
    {
        // Default constructor
    }
    public Employee(String name, int age, int employeeId, double salary)
    {
        super(name, age);
        this.employeeId = employeeId;
        this.salary = salary;
    }
    // Getter and Setter
    public int getEmployeeId()
    {
        return employeeId;
    }
    public void setEmployeeId(int employeeId)
    {
        this.employeeId = employeeId;
    }
    public double getSalary() 
    {
        return salary;
    }
    public void setSalary(double salary) 
    {
        this.salary = salary;
    }
    // Method to accept properties
    public void acceptDetails(String name, int age, int employeeId, double salary)
    {
        super.acceptDetails(name, age);
        this.employeeId = employeeId;
        this.salary = salary;
    }
    // Method to show properties
    @Override
    public void showDetails() 
    {
        System.out.println(toString());
    }
    // Override toString
    @Override
    public String toString()
    {
        return "EmployeeID: " + employeeId + "---> " + super.toString() + "   |  Salary: " + salary;
    }
    // CompareTo based on age
    @Override
    public int compareTo(Employee other) 
    {
    	if (this.getAge() > other.getAge())
			return -1;
		else if (this.getAge() < other.getAge())
			return 1;
		else
			return 0;
    }
}

